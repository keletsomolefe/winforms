<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HBSDataSet" targetNamespace="http://tempuri.org/HBSDataSet.xsd" xmlns:mstns="http://tempuri.org/HBSDataSet.xsd" xmlns="http://tempuri.org/HBSDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="HBSConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HBSConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Hawks_Business_Solutions.Properties.Settings.GlobalReference.Default.HBSConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeTypeTableAdapter" GeneratorDataComponentClassName="EmployeeTypeTableAdapter" Name="EmployeeType" UserDataComponentName="EmployeeTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HBSConnectionString (Settings)" DbObjectName="dbo.EmployeeType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EmployeeType] WHERE (([EmployeeTypeId] = @Original_EmployeeTypeId) AND ([Description] = @Original_Description) AND ([AccessLevel] = @Original_AccessLevel))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccessLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessLevel" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EmployeeType] ([Description], [AccessLevel]) VALUES (@Description, @AccessLevel);
SELECT EmployeeTypeId, Description, AccessLevel FROM EmployeeType WHERE (EmployeeTypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccessLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EmployeeTypeId, Description, AccessLevel FROM dbo.EmployeeType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EmployeeType] SET [Description] = @Description, [AccessLevel] = @AccessLevel WHERE (([EmployeeTypeId] = @Original_EmployeeTypeId) AND ([Description] = @Original_Description) AND ([AccessLevel] = @Original_AccessLevel));
SELECT EmployeeTypeId, Description, AccessLevel FROM EmployeeType WHERE (EmployeeTypeId = @EmployeeTypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccessLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccessLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessLevel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="EmployeeTypeId" ColumnName="EmployeeTypeId" DataSourceName="[C:\USERS\HP\DOCUMENTS\VISUAL STUDIO 2015\PROJECTS\HAWKS BUSINESS SOLUTIONS - COPY\HAWKS BUSINESS SOLUTIONS\HBS.MDF].dbo.EmployeeType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EmployeeTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EmployeeTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmployeeTypeId" DataSetColumn="EmployeeTypeId" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="AccessLevel" DataSetColumn="AccessLevel" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HBSDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="HBSDataSet" msprop:Generator_UserDSName="HBSDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EmployeeType" msprop:Generator_TableClassName="EmployeeTypeDataTable" msprop:Generator_TableVarName="tableEmployeeType" msprop:Generator_TablePropName="EmployeeType" msprop:Generator_RowDeletingName="EmployeeTypeRowDeleting" msprop:Generator_RowChangingName="EmployeeTypeRowChanging" msprop:Generator_RowEvHandlerName="EmployeeTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeeTypeRowDeleted" msprop:Generator_UserTableName="EmployeeType" msprop:Generator_RowChangedName="EmployeeTypeRowChanged" msprop:Generator_RowEvArgName="EmployeeTypeRowChangeEvent" msprop:Generator_RowClassName="EmployeeTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmployeeTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnEmployeeTypeId" msprop:Generator_ColumnPropNameInRow="EmployeeTypeId" msprop:Generator_ColumnPropNameInTable="EmployeeTypeIdColumn" msprop:Generator_UserColumnName="EmployeeTypeId" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccessLevel" msprop:Generator_ColumnVarNameInTable="columnAccessLevel" msprop:Generator_ColumnPropNameInRow="AccessLevel" msprop:Generator_ColumnPropNameInTable="AccessLevelColumn" msprop:Generator_UserColumnName="AccessLevel">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EmployeeType" />
      <xs:field xpath="mstns:EmployeeTypeId" />
    </xs:unique>
  </xs:element>
</xs:schema>